# tg_bot.py
import os
import asyncio
from dotenv import load_dotenv
from telegram import Update
from telegram.ext import (
    ApplicationBuilder,
    CommandHandler,
    MessageHandler,
    ContextTypes,
    filters,
)
from bot_core import BotSession

load_dotenv()  # –ª–æ–∫–∞–ª—å–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ .env
TOKEN = os.getenv("TELEGRAM_TOKEN")  # –ù–ï –∫–ª–∞–¥–∏ —Ç–æ–∫–µ–Ω –≤ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π!
if not TOKEN:
    raise RuntimeError("–ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è TELEGRAM_TOKEN –Ω–µ –∑–∞–¥–∞–Ω–∞")

session = BotSession()

INTRO = (
    "üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç-–ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è –∞–±–∏—Ç—É—Ä–∏–µ–Ω—Ç–æ–≤ –º–∞–≥–∏—Å—Ç—Ä–∞—Ç—É—Ä—ã –ò–¢–ú–û.\n\n"
    "–Ø –ø–æ–º–æ–≥—É –±—ã—Å—Ç—Ä–æ —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è —Å —É—á–µ–±–Ω—ã–º–∏ –ø–ª–∞–Ω–∞–º–∏ –¥–≤—É—Ö –ø—Ä–æ–≥—Ä–∞–º–º:\n"
    "‚Ä¢ AI ‚Äî ¬´–ò—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç¬ª\n"
    "‚Ä¢ AI Product ‚Äî ¬´–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ò–ò‚Äë–ø—Ä–æ–¥—É–∫—Ç–∞–º–∏¬ª\n\n"
    "–ß—Ç–æ —è —É–º–µ—é:\n"
    "‚Ä¢ –ü–æ–∫–∞–∑–∞—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã: /programs\n"
    "‚Ä¢ –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É: /ai –∏–ª–∏ /aiproduct\n"
    "‚Ä¢ –ü–æ–∫–∞–∑–∞—Ç—å –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ / –≤—ã–±–æ—Ä–Ω—ã–µ –∫—É—Ä—Å—ã –ø–æ —Å–µ–º–µ—Å—Ç—Ä—É\n"
    "‚Ä¢ –†–∞—Å—Å–∫–∞–∑–∞—Ç—å –ø—Ä–æ –ø—Ä–∞–∫—Ç–∏–∫—É, –ì–ò–ê –∏ Soft Skills\n"
    "‚Ä¢ –ù–∞–π—Ç–∏ –∫—É—Ä—Å –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º\n\n"
    "–ö–∞–∫ —Å–æ –º–Ω–æ–π –≥–æ–≤–æ—Ä–∏—Ç—å (–ø—Ä–∏–º–µ—Ä—ã):\n"
    "‚Ä¢ ¬´–æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –¥–∏—Å—Ü–∏–ø–ª–∏–Ω—ã 1 —Å–µ–º–µ—Å—Ç—Ä¬ª\n"
    "‚Ä¢ ¬´–≤—ã–±–æ—Ä–Ω—ã–µ 2 —Å–µ–º–µ—Å—Ç—Ä¬ª\n"
    "‚Ä¢ ¬´–ø—Ä–∞–∫—Ç–∏–∫–∞¬ª / ¬´–ì–ò–ê¬ª / ¬´soft skills¬ª\n"
    "‚Ä¢ ¬´–ø–µ—Ä–µ–∫–ª—é—á–∏—Å—å –Ω–∞ ai product¬ª\n"
    "‚Ä¢ ¬´–Ω–∞–π–¥–∏ –∫—É—Ä—Å: –≥–ª—É–±–æ–∫–æ–µ –æ–±—É—á–µ–Ω–∏–µ¬ª\n\n"
    "–ü–æ–¥—Å–∫–∞–∑–∫–∞: —Å–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏ –ø—Ä–æ–≥—Ä–∞–º–º—É (/ai –∏–ª–∏ /aiproduct), –ø–æ—Ç–æ–º –∑–∞–¥–∞–≤–∞–π –≤–æ–ø—Ä–æ—Å—ã üòâ"
)

HELP = (
    "‚ÑπÔ∏è –ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º\n\n"
    "–ö–æ–º–∞–Ω–¥—ã:\n"
    "‚Ä¢ /programs ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã\n"
    "‚Ä¢ /ai ‚Äî –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å—Å—è –Ω–∞ ¬´–ò—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç¬ª\n"
    "‚Ä¢ /aiproduct ‚Äî –ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å—Å—è –Ω–∞ ¬´–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ò–ò‚Äë–ø—Ä–æ–¥—É–∫—Ç–∞–º–∏¬ª\n"
    "‚Ä¢ /help ‚Äî –∫—Ä–∞—Ç–∫–∞—è –ø–∞–º—è—Ç–∫–∞\n\n"
    "–ü—Ä–∏–º–µ—Ä—ã –∑–∞–ø—Ä–æ—Å–æ–≤:\n"
    "‚Ä¢ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –¥–∏—Å—Ü–∏–ø–ª–∏–Ω—ã 1 —Å–µ–º–µ—Å—Ç—Ä\n"
    "‚Ä¢ –≤—ã–±–æ—Ä–Ω—ã–µ 2 —Å–µ–º–µ—Å—Ç—Ä\n"
    "‚Ä¢ –ø—Ä–∞–∫—Ç–∏–∫–∞\n"
    "‚Ä¢ –≥–∏–∞\n"
    "‚Ä¢ soft skills\n"
    "‚Ä¢ –Ω–∞–π–¥–∏ –∫—É—Ä—Å: –≥–ª—É–±–æ–∫–æ–µ –æ–±—É—á–µ–Ω–∏–µ\n"
)

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(INTRO)

async def help_cmd(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(HELP)

async def programs(update: Update, context: ContextTypes.DEFAULT_TYPE):
    # —Å–ª–µ–≥–∫–∞ —Ö–∞–∫: –¥–µ—Ä–Ω—ë–º –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π —Ö–µ–ª–ø–µ—Ä –∏–∑ bot_core —á–µ—Ä–µ–∑ —Ç–µ–∫—Å—Ç–æ–≤—ã–π –∏–Ω—Ç–µ–Ω—Ç
    ans = session.handle("–ø—Ä–æ–≥—Ä–∞–º–º—ã")
    await update.message.reply_text(ans)

async def set_ai(update: Update, context: ContextTypes.DEFAULT_TYPE):
    session.program = "ai"
    await update.message.reply_text("‚úÖ –û–∫, —Ä–∞–±–æ—Ç–∞–µ–º —Å –ø—Ä–æ–≥—Ä–∞–º–º–æ–π: ¬´–ò—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç¬ª.")

async def set_ai_product(update: Update, context: ContextTypes.DEFAULT_TYPE):
    session.program = "ai_product"
    await update.message.reply_text("‚úÖ –û–∫, —Ä–∞–±–æ—Ç–∞–µ–º —Å –ø—Ä–æ–≥—Ä–∞–º–º–æ–π: ¬´–£—á–µ–±–Ω—ã–π –ø–ª–∞–Ω –û–ü –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ò–ò‚Äë–ø—Ä–æ–¥—É–∫—Ç–∞–º–∏/AI Product¬ª.")

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = update.message.text or ""
    try:
        answer = session.handle(text)
    except Exception as e:
        answer = f"–£–ø—Å, —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫: {e}\n–ü–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑ –∏–ª–∏ –Ω–∞–ø–∏—à–∏ /help"
    await update.message.reply_text(answer)

def main():
    app = ApplicationBuilder().token(TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("help", help_cmd))
    app.add_handler(CommandHandler("programs", programs))
    app.add_handler(CommandHandler("ai", set_ai))
    app.add_handler(CommandHandler("aiproduct", set_ai_product))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))

    app.run_polling(allowed_updates=Update.ALL_TYPES)

if __name__ == "__main__":
    main()
